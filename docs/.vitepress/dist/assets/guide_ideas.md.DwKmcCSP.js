import{_ as a,c as s,o,am as c}from"./chunks/framework.D1DN_cFy.js";const _=JSON.parse('{"title":"设计思路","description":"","frontmatter":{},"headers":[],"relativePath":"guide/ideas.md","filePath":"guide/ideas.md"}'),t={name:"guide/ideas.md"};function d(r,e,i,n,p,l){return o(),s("div",null,e[0]||(e[0]=[c('<h1 id="设计思路" tabindex="-1">设计思路 <a class="header-anchor" href="#设计思路" aria-label="Permalink to &quot;设计思路&quot;">​</a></h1><h2 id="常规组件库" tabindex="-1">常规组件库 <a class="header-anchor" href="#常规组件库" aria-label="Permalink to &quot;常规组件库&quot;">​</a></h2><h2 id="css配置导出-供开发者使用" tabindex="-1">css配置导出，供开发者使用 <a class="header-anchor" href="#css配置导出-供开发者使用" aria-label="Permalink to &quot;css配置导出，供开发者使用&quot;">​</a></h2><h3 id="开发者自定义css配置-覆盖组件库样式" tabindex="-1">开发者自定义css配置，覆盖组件库样式 <a class="header-anchor" href="#开发者自定义css配置-覆盖组件库样式" aria-label="Permalink to &quot;开发者自定义css配置，覆盖组件库样式&quot;">​</a></h3><p><code>setp1:</code></p><p>使用npm whale-ui init 生成样式配置文件<code>cssConfig.json</code></p><p><code>setp2:</code></p><p>根据样式配置文件<code>cssConfig.json</code>，生成<code>var.scss</code></p><p><code>setp3:</code></p><p>根据<code>var.scss</code>生成<code>index.css</code>样式文件</p>',10)]))}const u=a(t,[["render",d]]);export{_ as __pageData,u as default};
